---
- name: Debian -- setup K8S
  hosts: all
  become: true
  tasks:
    - name: Update root user's password
      user:
        name: root
        update_password: always
        password: "{{root_password | password_hash('sha512')}}"
    - name: Make normal user
      user:
        name: '{{ username }}'
        password: "{{password | password_hash('sha512')}}"
        groups:
        - sudo
        state: present
        shell: /bin/bash
        createhome: yes
    - name: Disable swap
      become: true
      shell:
        "swapoff -a && sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab"
    - name: Install apt-transport-https
      apt: 
        name: apt-transport-https
        state: present
    - name: Install ca-certificates
      apt: 
        name: ca-certificates
        state: present
    - name: Install curl
      apt: 
        name: curl
        state: present
    - name: Add google apt-key 
      apt_key: 
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Add kubernetes repository
      apt_repository: 
        repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main' 
        state: present 
        filename: netclient 
        update_cache: yes
    - name: Install kubelet
      apt: 
        name: kubelet
        state: present
    - name: Install kubeadm
      apt: 
        name: kubeadm
        state: present
    - name: Install kubectl
      apt: 
        name: kubectl
        state: present
    - name: Download containerd
      unarchive: 
        src: https://github.com/containerd/containerd/releases/download/v1.6.6/containerd-1.6.6-linux-amd64.tar.gz
        dest : /usr/local
        remote_src: yes
    - name: Download containerd service filce
      get_url: 
        url: https://raw.githubusercontent.com/containerd/containerd/release/1.6/containerd.service
        dest : /usr/lib/systemd/system/containerd.service
    - name: Enable containerd
      systemd:
        name: containerd
        state: started
        enabled: true
    - name: Download runc file
      get_url: 
        url: https://github.com/opencontainers/runc/releases/download/v1.1.3/runc.amd64
        dest : /tmp/runc.amd64
    - name: Install runc
      become: true
      shell:
        "install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc"
    - name: Install Cilium CLI
      ansible.builtin.script: ./install-cilium-cli.sh create_first
      args:
        executable: /usr/bin/bash
    - name: Create /etc/modules-load.d/k8s.conf
      copy:
        dest: "/etc/modules-load.d/k8s.conf"
        content: |
          overlay
          br_netfilter
    - name: Create /etc/sysctl.d/k8s.conf
      copy:
        dest: "/etc/sysctl.d/k8s.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
    - name: Require cgroup2 in grub boot file
      lineinfile: 
        path: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX=""' 
        line: 'GRUB_CMDLINE_LINUX="systemd.unified_cgroup_hierarchy=1"'
        backrefs: yes
    - name: Make the containerd config directory
      file:
        path: /etc/containerd
        state: directory
    - name: Generate default containerd config
      shell:
         "containerd config default > /etc/containerd/config.toml"
    - name: Enable SystemCgroup in containerd config
      shell:
         "sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml"
    - name: Limit journalctl log size to 100 Mb
      shell:
         "journalctl --vacuum-size=100M"
